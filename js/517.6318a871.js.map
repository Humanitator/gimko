{"version":3,"file":"js/517.6318a871.js","mappings":"qGAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qLCLV,MAAMI,EAAaC,MAAOC,EAAMC,KACnCC,QAAQC,IAAK,qBAAuBF,GACpC,MAAMG,QAAgBC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAIP,EAAMC,IAE3C,OAAIG,EAAQI,SACDJ,GAEPF,QAAQC,IAAI,uBACL,KACX,EAiBSM,EAAgBV,MAAOC,EAAMC,EAASS,KAC/CR,QAAQC,IAAI,sBAAwBF,SAC9BU,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAIP,EAAMC,GAAUS,EAAU,E,2iHCvBlD,MAAME,GAAOC,EAAAA,EAAAA,MACPC,GAAOD,EAAAA,EAAAA,MACPE,EAAUhB,UACZG,QAAQC,IAAI,iBACZW,EAAKE,OAAQC,EAAAA,EAAAA,MACb,MAAMC,QAAgBb,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASO,EAAKE,MAAMG,YAAYC,MACjEF,EAAQV,UACRN,QAAQC,IAAI,aACZS,EAAKI,MAAQE,EAAQG,QAErBnB,QAAQC,IAAI,kBAChB,EAGEmB,GAAYT,EAAAA,EAAAA,IAAI,IAChBU,EAAexB,gBACXa,EAAKI,MAAMQ,MAAMC,SAAS1B,UAC5BuB,EAAUN,MAAMU,YAAY5B,EAAW,SAAU6B,IAASN,OAAO,GACnE,EAGAO,EAAe7B,UACjB,MAAM8B,QAAkBxB,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASuB,IAChD,GAAID,EAAUrB,SACV,OAAOqB,CACX,EAIEE,EAAsBhC,UACxB,MAAMiC,GAAIC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAW3B,EAAAA,EAAI,UAAU4B,EAAAA,EAAAA,IAAM,WAAY,KAAMC,IAC3DC,QAAeC,EAAAA,EAAAA,IAAQN,GACvBO,EAAa,GAKnB,OAJAF,EAAOZ,SAASe,IACZtC,QAAQC,IAAIqC,GACZD,EAAWb,KAAKc,EAAO,IAEpBD,EAAW,EAAE,EAIlBE,GAAgB5B,EAAAA,EAAAA,IAAI,IACpB6B,GAAe7B,EAAAA,EAAAA,MACf8B,EAAe5C,gBACXgC,EAAoBU,EAAczB,OACvC4B,MAAMP,IACHK,EAAa1B,MAAQ,CAACqB,EAAO,GAC/B,EAGAQ,GAAiBhC,EAAAA,EAAAA,MACjBiC,GAAmBjC,EAAAA,EAAAA,MAGnBkC,GAAoBlC,EAAAA,EAAAA,IAAI,IACxBmC,IAAgBnC,EAAAA,EAAAA,IAAI,IACpBoC,GAAoBA,KAEtBrC,EAAKI,MAAM+B,kBAAkBtB,SAAS1B,UAClC,MAAMyC,QAAeZ,EAAasB,GAClCH,EAAkB/B,MAAMU,KAAKc,EAAOnB,OAAO,IAG/CT,EAAKI,MAAMgC,cAAcvB,SAAS1B,UAC9B,MAAMyC,QAAeZ,EAAasB,GAClCF,GAAchC,MAAMU,KAAKc,EAAOnB,OAAO,GACzC,EAIA8B,GAAoBpD,UACtB,IAAIyC,SAAgBZ,EAAaE,IAAMT,aACjCV,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASuB,GAAM,CACnCiB,kBAAmB,IAAIP,EAAOQ,cAAelC,EAAKE,MAAMG,YAAYC,OAIxER,EAAKI,MAAMgC,cAActB,KAAKI,SAGxBnB,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASO,EAAKE,MAAMG,YAAYC,KAAM,CAC1D4B,cAAe,IAAIpC,EAAKI,MAAMgC,iBAIlCA,GAAchC,MAAMU,KAAKc,GAEzBtC,QAAQC,IAAI,sBAAsB,EAIhCiD,GAAsBrD,UACxB,MAAMyC,SAAgBZ,EAAaE,IAAMT,OAGzC0B,EAAkB/B,MAAMqC,OAAOzC,EAAKI,MAAM+B,kBAAkBO,QAAQxB,GAAM,GAG1EyB,GAAQvC,MAAMU,KAAKc,GAGnB5B,EAAKI,MAAM+B,kBAAkBM,OAAOzC,EAAKI,MAAM+B,kBAAkBO,QAAQxB,GAAM,GAG/ElB,EAAKI,MAAMuC,QAAQ7B,KAAKI,SAGlBnB,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASO,EAAKE,MAAMG,YAAYC,KAAM,CAC1D2B,kBAAmB,IAAInC,EAAKI,MAAM+B,mBAClCQ,QAAS,IAAI3C,EAAKI,MAAMuC,WAI5Bf,EAAOQ,cAAcK,OAAOb,EAAOQ,cAAcK,OAAOvC,EAAKE,MAAMG,YAAYC,KAAM,SAE/ET,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASuB,GAAM,CACnCkB,cAAe,IAAIR,EAAOQ,eAC1BO,QAAS,IAAIf,EAAOe,QAASzC,EAAKE,MAAMG,YAAYC,MACtD,EAIAoC,GAAoBzD,UACtB,MAAMyC,SAAgBZ,EAAaE,IAAMT,OAGzC0B,EAAkB/B,MAAMqC,OAAOzC,EAAKI,MAAM+B,kBAAkBO,QAAQxB,GAAM,GAG1EU,EAAOQ,cAAcK,OAAOb,EAAOQ,cAAcM,QAAQxC,EAAKE,MAAMG,YAAYC,MAChFR,EAAKI,MAAM+B,kBAAkBM,OAAOb,EAAOO,kBAAkBO,QAAQxB,IAGrErB,EAAc,SAAUqB,EAAK,CAAEkB,cAAe,IAAKR,EAAOQ,iBAG1DvC,EAAc,SAAUK,EAAKE,MAAMG,YAAYC,IAAK,CAAE2B,kBAAmB,IAAKnC,EAAKI,MAAM+B,oBAAqB,EAI5GU,GAAsB1D,UACxB,MAAMyC,SAAgBZ,EAAaE,IAAMT,OAGzC2B,GAAchC,MAAMqC,OAAOzC,EAAKI,MAAMgC,cAAcM,QAAQxB,GAAM,GAGlEU,EAAOO,kBAAkBM,OAAOb,EAAOO,kBAAkBO,QAAQxC,EAAKE,MAAMG,YAAYC,KAAM,GAC9FR,EAAKI,MAAMgC,cAAcK,OAAOzC,EAAKI,MAAMgC,cAAcM,QAAQxB,GAAM,GAGvErB,EAAc,SAAUqB,EAAK,CAAEiB,kBAAmB,IAAIP,EAAOO,qBAG7DtC,EAAc,SAAUK,EAAKE,MAAMG,YAAYC,IAAK,CAAE4B,cAAe,IAAIpC,EAAKI,MAAMgC,gBAAiB,EAInGO,IAAU1C,EAAAA,EAAAA,IAAI,IACd6C,GAAaA,KACf9C,EAAKI,MAAMuC,QAAQ9B,SAAQ1B,UACvB,MAAM4D,QAAe7D,EAAW,SAAU8D,GAC1CL,GAAQvC,MAAMU,KAAKiC,EAAOtC,OAAO,GACnC,EAIAwC,GAAe9D,UACjB,MAAMyC,SAAgB1C,EAAW,SAAUgC,IAAMT,OAGjDmB,EAAOe,QAAQF,OAAOb,EAAOe,QAAQD,QAAQxC,EAAKE,MAAMG,YAAYC,KAAM,GAC1ER,EAAKI,MAAMuC,QAAQF,OAAOzC,EAAKI,MAAMuC,QAAQD,QAAQxB,GAAM,GAG3DrB,EAAc,SAAUqB,EAAK,CAAEyB,QAAS,IAAIf,EAAOe,WAGnD9C,EAAc,SAAUK,EAAKE,MAAMG,YAAYC,IAAK,CAAEmC,QAAS,IAAI3C,EAAKI,MAAMuC,UAAW,EAIvFO,GAAa/D,UACf,MAAMyC,SAAgB1C,EAAW,SAAUgC,IAAMT,OAEjDwB,EAAe7B,MAAQwB,EACvBM,EAAiB9B,MAAQc,CAAG,EAI1BiC,GAAYhE,MAAO+B,EAAKkC,KAC1B,MAAMxB,SAAgBZ,EAAaE,IAAMT,aACnCV,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASuB,GAAM,CACnCN,MAAO,IAAIgB,EAAOhB,MAAOwC,KAG7BC,SAASC,QAAQ,EAIfC,GAAiBpE,MAAO+B,EAAKkC,KAC/B,MAAMxB,SAAgBZ,EAAaE,IAAMT,OACzCmB,EAAOhB,MAAM6B,OAAOb,EAAOhB,MAAM8B,QAAQU,GAAM,SACzCrD,EAAAA,EAAAA,KAAUL,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,QAASuB,GAAM,CACnCN,MAAO,IAAIgB,EAAOhB,SAGtByC,SAASC,QAAQ,EAIfE,IAAoBvD,EAAAA,EAAAA,KAAI,GACxBwD,IAAsBxD,EAAAA,EAAAA,KAAI,GAG1ByD,GAAeA,KACjBzB,EAAe7B,MAAQ,KACvB8B,EAAiB9B,MAAQ,KACzBoD,GAAkBpD,OAAQ,CAAK,E,OAInCuD,EAAAA,EAAAA,KAAUxE,UACNyE,SAASC,MAAQ,wBACX1D,IACNkC,WACM1B,IACNmC,KACAxD,QAAQC,IAAIS,EAAKI,MAAM,I,qxICvO/B,MAAM0D,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://gimko/./node_modules/vue-loader/dist/exportHelper.js","webpack://gimko/./src/firebase/fbEasy.js","webpack://gimko/./src/views/People.vue","webpack://gimko/./src/views/People.vue?df53"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import db from \"./init\";\nimport { doc, getDoc, getDocs, setDoc, updateDoc } from \"firebase/firestore\";\n\n// Get document safely\nexport const safeGetDoc = async (path, docName) => {\n    console.log((\"Getting document: \" + docName));\n    const docInst = await getDoc(doc(db, path, docName));\n\n    if (docInst.exists()) {\n        return docInst;\n    } else {\n        console.log(\"Document not found!\");\n        return null\n    }\n};\n\n// Get all documents safely\nexport const safeGetAllDocs = async (collectionName) => {\n    console.log((\"Getting all documents: \" + collectionName));\n    const colRef = collection(db, collectionName);\n\n    const querySnapshot = await getDocs(colRef);\n    querySnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n    });\n    return querySnapshot;\n};\n\n// Update document safely\nexport const safeUpdateDoc = async (path, docName, newValues) => {\n    console.log(\"Updating document: \" + docName);\n    await updateDoc(doc(db, path, docName), newValues);\n};\n\n// Set document safely\nexport const safeSetDoc = async (path, docName, newValue) => {\n    console.log(\"Setting document: \" + docName);\n    await setDoc(doc(db, path, docName), newValue);\n};","<script setup>\n    import db from '@/firebase/init';\n    import { async } from '@firebase/util';\n    import { safeUpdateDoc, safeGetDoc } from '@/firebase/fbEasy'\n    import { getAuth } from 'firebase/auth';\n    import { collection, doc, getDoc, getDocs, query, updateDoc, where } from 'firebase/firestore';\n    import { onMounted, ref } from 'vue';\n\n    // Get current user\n    const user = ref();\n    const auth = ref();\n    const getUser = async () => {\n        console.log(\"Getting user!\");\n        auth.value = getAuth();\n        const userDoc = await getDoc(doc(db, \"users\", auth.value.currentUser.uid));\n        if (userDoc.exists()) {\n            console.log(\"Got user!\");\n            user.value = userDoc.data();\n        } else {\n            console.log(\"User not found!\");\n        }\n    };\n\n    const userTrees = ref([]);\n    const getUserTrees = async () => {\n        await user.value.trees.forEach( async (treeID) => {\n            userTrees.value.push((await safeGetDoc('/trees', treeID)).data());\n        });\n    };\n\n    const getPersonDoc = async (pid) => {\n        const personDoc = await getDoc(doc(db, \"users\", pid));\n        if (personDoc.exists()) {\n            return personDoc;\n        }\n    };\n\n    // Find a person by username\n    const getPersonByUsername = async (username) => {\n        const q = query(collection(db, \"users\"), where(\"username\", \"==\", username));\n        const people = await getDocs(q);\n        const peopleData = [];\n        people.forEach((person) => {\n            console.log(person);\n            peopleData.push(person);\n        });\n        return peopleData[0];\n    };\n    \n    // Search for a person\n    const usernameQuery = ref(\"\");\n    const queryResults = ref();\n    const searchPerson = async () => {\n        await getPersonByUsername(usernameQuery.value)\n        .then((people) => {\n            queryResults.value = [people];\n        });\n    }\n\n    const selectedPerson = ref();\n    const selectedPersonID = ref();\n\n    // Get friend requests\n    const incomingFriendReq = ref([]);\n    const sentFriendReq = ref([]);\n    const getFriendRequests = () => {\n        // Get incoming\n        user.value.incomingFriendReq.forEach( async (reqID) => {\n            const person = await getPersonDoc(reqID);\n            incomingFriendReq.value.push(person.data());\n        });\n        // Get sent\n        user.value.sentFriendReq.forEach( async (reqID) => {\n            const person = await getPersonDoc(reqID);\n            sentFriendReq.value.push(person.data());\n        });\n    }\n\n    // Send a friend request\n    const sendFriendRequest = async (pid) => {\n        let person = (await getPersonDoc(pid)).data();\n        await updateDoc(doc(db, \"users\", pid), {\n            incomingFriendReq: [...person.sentFriendReq, auth.value.currentUser.uid],\n        });\n\n        // Update local user ref\n        user.value.sentFriendReq.push(pid);\n\n        // Update DB user\n        await updateDoc(doc(db, \"users\", auth.value.currentUser.uid), {\n            sentFriendReq: [...user.value.sentFriendReq],\n        });\n\n        // Add to local ref\n        sentFriendReq.value.push(person);\n\n        console.log(\"Sent friend request\");\n    };\n\n    // Accept friend request\n    const acceptFriendRequest = async (pid) => {\n        const person = (await getPersonDoc(pid)).data();\n\n        // Remove from local ref\n        incomingFriendReq.value.splice(user.value.incomingFriendReq.indexOf(pid), 1);\n\n        // Add to local friends\n        friends.value.push(person);\n\n        // Remove from local user requests\n        user.value.incomingFriendReq.splice(user.value.incomingFriendReq.indexOf(pid), 1);\n        \n        // Update local user friends\n        user.value.friends.push(pid);\n\n        // Update DB user\n        await updateDoc(doc(db, \"users\", auth.value.currentUser.uid), {\n            incomingFriendReq: [...user.value.incomingFriendReq],\n            friends: [...user.value.friends],\n        });\n\n        // Remove from local person\n        person.sentFriendReq.splice(person.sentFriendReq.splice(auth.value.currentUser.uid), 1);\n\n        await updateDoc(doc(db, \"users\", pid), {\n            sentFriendReq: [...person.sentFriendReq],\n            friends: [...person.friends, auth.value.currentUser.uid],\n        });\n    };\n\n    // Deny friend request\n    const denyFriendRequest = async (pid) => {\n        const person = (await getPersonDoc(pid)).data();\n\n        // Remove from local ref\n        incomingFriendReq.value.splice(user.value.incomingFriendReq.indexOf(pid), 1);\n\n        // Remove on local\n        person.sentFriendReq.splice(person.sentFriendReq.indexOf(auth.value.currentUser.uid));\n        user.value.incomingFriendReq.splice(person.incomingFriendReq.indexOf(pid));\n\n        // Remove from person\n        safeUpdateDoc('/users', pid, { sentFriendReq: [ ...person.sentFriendReq] });\n\n        // Remove from user\n        safeUpdateDoc('/users', auth.value.currentUser.uid, { incomingFriendReq: [ ...user.value.incomingFriendReq] });\n    };\n\n    // Cancel a sent friend request\n    const cancelFriendRequest = async (pid) => {\n        const person = (await getPersonDoc(pid)).data();\n\n        // Remove from local ref\n        sentFriendReq.value.splice(user.value.sentFriendReq.indexOf(pid), 1);\n\n        // Remove on local\n        person.incomingFriendReq.splice(person.incomingFriendReq.indexOf(auth.value.currentUser.uid), 1);\n        user.value.sentFriendReq.splice(user.value.sentFriendReq.indexOf(pid), 1);\n\n        // Remove from person\n        safeUpdateDoc('/users', pid, { incomingFriendReq: [...person.incomingFriendReq] });\n        \n        // Remove from user\n        safeUpdateDoc('/users', auth.value.currentUser.uid, { sentFriendReq: [...user.value.sentFriendReq] });\n    };\n\n    // Get friends\n    const friends = ref([]);\n    const getFriends = () => {\n        user.value.friends.forEach(async (fid) => {\n            const friend = await safeGetDoc('/users', fid);\n            friends.value.push(friend.data());\n        });\n    };\n\n    // Remove a friend\n    const removeFriend = async (pid) => {\n        const person = (await safeGetDoc('/users', pid)).data()\n\n        // Remove on local\n        person.friends.splice(person.friends.indexOf(auth.value.currentUser.uid), 1);\n        user.value.friends.splice(user.value.friends.indexOf(pid), 1);\n        \n        // Remove in person\n        safeUpdateDoc('/users', pid, { friends: [...person.friends]})\n\n        // Remove in user\n        safeUpdateDoc('/users', auth.value.currentUser.uid, { friends: [...user.value.friends] });\n    };\n\n    // Load person data\n    const loadPerson = async (pid) => {\n        const person = (await safeGetDoc('/users', pid)).data();\n\n        selectedPerson.value = person;\n        selectedPersonID.value = pid;\n    };\n\n    // Add a person to tree\n    const addToTree = async (pid, tid) => {\n        const person = (await getPersonDoc(pid)).data();\n        await updateDoc(doc(db, \"users\", pid), {\n            trees: [...person.trees, tid],\n        });\n\n        location.reload();\n    };\n\n    // Remove a person from tree\n    const removeFromTree = async (pid, tid) => {\n        const person = (await getPersonDoc(pid)).data();\n        person.trees.splice(person.trees.indexOf(tid), 1);\n        await updateDoc(doc(db, \"users\", pid), {\n            trees: [...person.trees],\n        });\n\n        location.reload();\n    };\n\n    // Dialog bools\n    const requestDialogOpen = ref(false);\n    const addToTreeDialogOpen = ref(false);\n\n    // Close all dialogs\n    const closeDialogs = () => {\n        selectedPerson.value = null;\n        selectedPersonID.value = null;\n        requestDialogOpen.value = false;\n    };\n\n    // When mounted\n    onMounted(async () => {\n        document.title = \"gimko | Cilvēki\"\n        await getUser();\n        getFriendRequests();\n        await getUserTrees();\n        getFriends();\n        console.log(user.value);\n    });\n</script>\n\n<template>\n    <h1>Cilvēki</h1>\n\n    <!-- Page placeholder while getting data -->\n    <div v-if=\"!user\">\n        <div class=\"username-query-container\">\n            <div class=\"bg\"></div>\n        </div>\n\n        <div class=\"friend-list-container\">\n            <h2>Draugi</h2>\n            <div class=\"friend-selector\">\n                <div class=\"friend-button hover-up\" v-for=\"i in Array(5).keys()\">\n                    <div class=\"bg op-20\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Page view -->\n    <div v-if=\"user\">\n        <h2>Sveiks, {{ user.username }}!</h2>\n        <!-- Search query results -->\n        <div class=\"search-result-container\" v-if=\"queryResults\">\n            <h2>Meklēšanas rezultāti:</h2>\n            <div class=\"search-result\" v-for=\"person in queryResults\">\n                <h2>{{ person.data().username }}</h2>\n\n                <div class=\"search-result-buttons\">\n                    <!-- If self -->\n                    <h2 v-if=\"person.id == auth.currentUser.uid\">\n                        Šis esi Tu!\n                    </h2>\n                    <!-- Add friend / Send friend request -->\n                    <button \n                        class=\"hover-up-p\" \n                        @click=\"sendFriendRequest(person.id)\" \n                        v-if=\"!user.friends.includes(person.id) && !user.incomingFriendReq.includes(person.id) && !user.sentFriendReq.includes(person.id) && auth.currentUser.uid != person.id\"\n                    >\n                        <p>PIEVIENOT DRAUGU</p>\n                        <div class=\"bg op-30\"></div>\n                    </button>\n                    <!-- Accept friend request -->\n                    <button \n                        class=\"hover-up-p\" \n                        @click=\"acceptFriendRequest(person.id)\" \n                        v-if=\"user.incomingFriendReq.includes(person.id)\"\n                    >\n                        <p>PIEŅEMT DRAUGA PIEPRASĪJUMU</p>\n                        <div class=\"bg op-30\"></div>\n                    </button>\n                    <!-- Add to tree -->\n                    <button \n                        class=\"hover-up-p\" \n                        @click=\"() => {\n                            addToTreeDialogOpen = true;\n                            selectedPerson = person.data();\n                            selectedPersonID = person.id;\n                            loadPerson(person.id);\n                        }\" \n                        v-if=\"user.friends.includes(person.id)\"\n                    >\n                        <p>PIEVIENOT KOKAM</p>\n                        <div class=\"bg op-30\"></div>\n                    </button>\n                    <div class=\"bg op-30\"></div>\n                </div>\n\n                <div class=\"bg op-100\"></div>\n            </div>\n        </div>\n\n        <!-- Search for a person -->\n        <div class=\"username-query-container\">\n            <h2>Meklēt kādu</h2>\n            <p>Ievadi lietotājvārdu: <input v-model=\"usernameQuery\" type=\"text\" /></p>\n            <button class=\"hover-up-p\" @click=\"searchPerson()\">\n                <p>Meklēt</p>\n                <div class=\"bg accent\"></div>\n            </button>\n            <div class=\"bg\"></div>\n        </div>\n\n        <!-- Person info -->\n        <div class=\"person-info z-10\" v-bind:class=\"(!selectedPerson)?'hidden-left--50':''\">\n            <h2 v-if=\"selectedPerson\">{{ selectedPerson.username }}</h2>\n            <!-- Add to tree -->\n            <div class=\"add-to-tree\" v-if=\"addToTreeDialogOpen && selectedPerson\">\n                <h3 style=\"text-align: center;\">Pievienot kokam</h3>\n                <div class=\"tree-selector\">\n                    <div v-for=\"tree, i in userTrees\" class=\"user-tree\">\n                        <p>{{ tree.name }}</p>\n                        \n                        <p>\n                            <button \n                                class=\"hover-up-p add-to-tree-btn\" \n                                @click=\"addToTree(selectedPersonID, user.trees[i])\"\n                                v-if=\"!selectedPerson.trees.includes(user.trees[i])\"\n                                >\n                                <p>PIEVIENOT</p>\n                                <div class=\"bg op-30\"></div>\n                            </button>\n                            <button\n                                class=\"hover-up-p add-to-tree-btn\"\n                                @click=\"removeFromTree(selectedPersonID, user.trees[i])\"\n                                v-if=\"selectedPersonID == tree.ownerID && selectedPerson.trees.includes(user.trees[i])\"\n                                >\n                                <p>NOŅEMT</p>\n                                <div class=\"bg op-30\"></div>\n                            </button>\n                        </p>\n\n                        <div class=\"bg op-20\"></div>\n                    </div>\n                    <p v-if=\"userTrees.length == 0\" style=\"text-align: center; width: 100%;\">No trees</p>\n                </div>\n\n                <div class=\"bg op-20\"></div>\n            </div>\n            <!-- Add to tree button -->\n            <button class=\"hover-up-p\" v-if=\"!addToTreeDialogOpen\" @click=\"() => addToTreeDialogOpen = true\">\n                <p>Pievienot Kokam</p>\n                <div class=\"bg\"></div>\n            </button>\n\n            <button class=\"close-button hover-up-p\" @click=\"closeDialogs()\">\n                <p>Aizvērt</p>\n                <div class=\"bg op-20\"></div>\n            </button>\n        </div>\n\n        <!-- Accept friend request -->\n            <!-- Button -->\n        <button class=\"requests-button hover-up-p\" @click=\"() => requestDialogOpen = true\" v-bind:class=\"(!requestDialogOpen)?'shown-0-0':''\">\n            <p>Drauga pieprasījumi</p>\n            <div class=\"bg accent op-50\"></div>\n        </button>\n            <!-- Dialog -->\n        <div class=\"requests-container\" v-bind:class=\"(requestDialogOpen)?'shown-0-0':''\">\n            <div class=\"friend-requests\">\n                <h3>Ienākošie pieprasījumi:</h3>\n                <div v-for=\"personID, i in user.incomingFriendReq\" v-if=\"incomingFriendReq.length > 0\">\n                    <div class=\"request\">\n                        <p>{{ incomingFriendReq[i].username }}\n                            <button class=\"hover-up-p\" @click=\"denyFriendRequest(personID)\">\n                                <p>Noraidīt</p>\n                                <div class=\"bg\"></div>\n                            </button>\n                            <button class=\"hover-up-p\" @click=\"acceptFriendRequest(personID)\">\n                                <p>Pieņemt</p>\n                                <div class=\"bg\"></div>\n                            </button>\n                        </p>\n                    </div>\n                </div>\n                <p v-if=\"!user.incomingFriendReq || user.incomingFriendReq.length == 0\">Nav ienākošu pieprasījumu...</p>\n            </div>\n            <div class=\"pending-requests\">\n                <h3>Sūtītie pieprasījumi:</h3>\n                <div v-for=\"personID, i in user.sentFriendReq\" v-if=\"sentFriendReq.length > 0\">\n                    <div class=\"request\">\n                        <p>{{ sentFriendReq[i].username }}\n                            <button class=\"hover-up-p\" @click=\"cancelFriendRequest(personID)\">\n                                <p>Atcelt</p>\n                                <div class=\"bg\"></div>\n                            </button>\n                        </p>\n                    </div>\n                </div>\n                <p v-if=\"!user.sentFriendReq || user.sentFriendReq.length == 0\"> Nav sūtītu pieprasījumu...</p>\n            </div>\n\n            <button class=\"close-button z-10 hover-up-p\" @click=\"closeDialogs()\">\n                <p>Aizvērt</p>\n                <div class=\"bg op-30\"></div>\n            </button>\n\n            <div class=\"bg secondary op-40\"></div>\n        </div>\n\n        <!-- Friends list -->\n        <div class=\"friend-list-container\">\n            <h1>Draugi</h1>\n            <div class=\"friend-selector\" v-if=\"friends.length > 0\">\n                <div class=\"friend-panel\" v-for=\"friendID, i in user.friends\">\n                    <h2>{{ friends[i].username }}</h2>\n                    <button class=\"hover-up-p info\" @click=\"loadPerson(friendID)\">\n                        <p>Info</p>\n                        <div class=\"bg op-50\"></div>\n                    </button>\n                    <button class=\"hover-up-p z-5\" @click=\"removeFriend(friendID)\">\n                        <p>Noņemt draugu</p>\n                        <div class=\"bg red op-50\"></div>\n                    </button>\n                    <div class=\"bg op-20\"></div>\n                </div>\n            </div>\n\n            <!-- If friends is empty -->\n            <div v-if=\"user.friends.length == 0\">\n                <img class=\"lonely\" src=\"../assets/img/lonely_1280x853.jpg\">\n                <p>Vientuļi...</p>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<style scoped lang=\"scss\">\n    @import \"../assets/css/people.scss\";\n    @import \"../assets/css/base.scss\";\n    @import \"../assets/css/colors.scss\";\n</style>","import script from \"./People.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./People.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./People.vue?vue&type=style&index=0&id=5d3ec3c3&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5d3ec3c3\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","safeGetDoc","async","path","docName","console","log","docInst","getDoc","doc","db","exists","safeUpdateDoc","newValues","updateDoc","user","ref","auth","getUser","value","getAuth","userDoc","currentUser","uid","data","userTrees","getUserTrees","trees","forEach","push","treeID","getPersonDoc","personDoc","pid","getPersonByUsername","q","query","collection","where","username","people","getDocs","peopleData","person","usernameQuery","queryResults","searchPerson","then","selectedPerson","selectedPersonID","incomingFriendReq","sentFriendReq","getFriendRequests","reqID","sendFriendRequest","acceptFriendRequest","splice","indexOf","friends","denyFriendRequest","cancelFriendRequest","getFriends","friend","fid","removeFriend","loadPerson","addToTree","tid","location","reload","removeFromTree","requestDialogOpen","addToTreeDialogOpen","closeDialogs","onMounted","document","title","__exports__"],"sourceRoot":""}